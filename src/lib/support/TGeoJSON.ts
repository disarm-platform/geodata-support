/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type GeoJson =
  | GeoJsonPoint
  | GeoJsonLineString
  | GeoJsonPolygon
  | GeoJsonMultiPoint
  | GeoJsonMultiLineString
  | GeoJsonMultiPolygon
  | GeoJsonGeometryCollection
  | GeoJsonFeature
  | GeoJsonFeatureCollection;

export interface GeoJsonPoint {
  type: "Point";
  coordinates: number[];
  bbox?: number[];
  [k: string]: any;
}
export interface GeoJsonLineString {
  type: "LineString";
  coordinates: number[][];
  bbox?: number[];
  [k: string]: any;
}
export interface GeoJsonPolygon {
  type: "Polygon";
  coordinates: number[][][];
  bbox?: number[];
  [k: string]: any;
}
export interface GeoJsonMultiPoint {
  type: "MultiPoint";
  coordinates: number[][];
  bbox?: number[];
  [k: string]: any;
}
export interface GeoJsonMultiLineString {
  type: "MultiLineString";
  coordinates: number[][][];
  bbox?: number[];
  [k: string]: any;
}
export interface GeoJsonMultiPolygon {
  type: "MultiPolygon";
  coordinates: number[][][][];
  bbox?: number[];
  [k: string]: any;
}
export interface GeoJsonGeometryCollection {
  type: string;
  geometries: Array<
    | GeoJsonPoint1
    | GeoJsonLineString1
    | GeoJsonPolygon1
    | GeoJsonMultiPoint1
    | GeoJsonMultiLineString1
    | GeoJsonMultiPolygon1>;
  bbox?: number[];
  [k: string]: any;
}
export interface GeoJsonPoint1 {
  type: "Point";
  coordinates: number[];
  bbox?: number[];
  [k: string]: any;
}
export interface GeoJsonLineString1 {
  type: "LineString";
  coordinates: number[][];
  bbox?: number[];
  [k: string]: any;
}
export interface GeoJsonPolygon1 {
  type: "Polygon";
  coordinates: number[][][];
  bbox?: number[];
  [k: string]: any;
}
export interface GeoJsonMultiPoint1 {
  type: "MultiPoint";
  coordinates: number[][];
  bbox?: number[];
  [k: string]: any;
}
export interface GeoJsonMultiLineString1 {
  type: "MultiLineString";
  coordinates: number[][][];
  bbox?: number[];
  [k: string]: any;
}
export interface GeoJsonMultiPolygon1 {
  type: "MultiPolygon";
  coordinates: number[][][][];
  bbox?: number[];
  [k: string]: any;
}
export interface GeoJsonFeature {
  type: string;
  properties: {
    [k: string]: any;
  };
  geometry:
    | null
    | GeoJsonPoint2
    | GeoJsonLineString2
    | GeoJsonPolygon2
    | GeoJsonMultiPoint2
    | GeoJsonMultiLineString2
    | GeoJsonMultiPolygon2
    | GeoJsonGeometryCollection1;
  bbox?: number[];
  [k: string]: any;
}
export interface GeoJsonPoint2 {
  type: "Point";
  coordinates: number[];
  bbox?: number[];
  [k: string]: any;
}
export interface GeoJsonLineString2 {
  type: "LineString";
  coordinates: number[][];
  bbox?: number[];
  [k: string]: any;
}
export interface GeoJsonPolygon2 {
  type: "Polygon";
  coordinates: number[][][];
  bbox?: number[];
  [k: string]: any;
}
export interface GeoJsonMultiPoint2 {
  type: "MultiPoint";
  coordinates: number[][];
  bbox?: number[];
  [k: string]: any;
}
export interface GeoJsonMultiLineString2 {
  type: "MultiLineString";
  coordinates: number[][][];
  bbox?: number[];
  [k: string]: any;
}
export interface GeoJsonMultiPolygon2 {
  type: "MultiPolygon";
  coordinates: number[][][][];
  bbox?: number[];
  [k: string]: any;
}
export interface GeoJsonGeometryCollection1 {
  type: string;
  geometries: Array<
    | GeoJsonPoint3
    | GeoJsonLineString3
    | GeoJsonPolygon3
    | GeoJsonMultiPoint3
    | GeoJsonMultiLineString3
    | GeoJsonMultiPolygon3>;
  bbox?: number[];
  [k: string]: any;
}
export interface GeoJsonPoint3 {
  type: "Point";
  coordinates: number[];
  bbox?: number[];
  [k: string]: any;
}
export interface GeoJsonLineString3 {
  type: "LineString";
  coordinates: number[][];
  bbox?: number[];
  [k: string]: any;
}
export interface GeoJsonPolygon3 {
  type: "Polygon";
  coordinates: number[][][];
  bbox?: number[];
  [k: string]: any;
}
export interface GeoJsonMultiPoint3 {
  type: "MultiPoint";
  coordinates: number[][];
  bbox?: number[];
  [k: string]: any;
}
export interface GeoJsonMultiLineString3 {
  type: "MultiLineString";
  coordinates: number[][][];
  bbox?: number[];
  [k: string]: any;
}
export interface GeoJsonMultiPolygon3 {
  type: "MultiPolygon";
  coordinates: number[][][][];
  bbox?: number[];
  [k: string]: any;
}
export interface GeoJsonFeatureCollection {
  type: string;
  features: GeoJsonFeature1[];
  bbox?: number[];
  [k: string]: any;
}
export interface GeoJsonFeature1 {
  type: string;
  properties: {
    [k: string]: any;
  };
  geometry:
    | null
    | GeoJsonPoint4
    | GeoJsonLineString4
    | GeoJsonPolygon4
    | GeoJsonMultiPoint4
    | GeoJsonMultiLineString4
    | GeoJsonMultiPolygon4
    | GeoJsonGeometryCollection2;
  bbox?: number[];
  [k: string]: any;
}
export interface GeoJsonPoint4 {
  type: "Point";
  coordinates: number[];
  bbox?: number[];
  [k: string]: any;
}
export interface GeoJsonLineString4 {
  type: "LineString";
  coordinates: number[][];
  bbox?: number[];
  [k: string]: any;
}
export interface GeoJsonPolygon4 {
  type: "Polygon";
  coordinates: number[][][];
  bbox?: number[];
  [k: string]: any;
}
export interface GeoJsonMultiPoint4 {
  type: "MultiPoint";
  coordinates: number[][];
  bbox?: number[];
  [k: string]: any;
}
export interface GeoJsonMultiLineString4 {
  type: "MultiLineString";
  coordinates: number[][][];
  bbox?: number[];
  [k: string]: any;
}
export interface GeoJsonMultiPolygon4 {
  type: "MultiPolygon";
  coordinates: number[][][][];
  bbox?: number[];
  [k: string]: any;
}
export interface GeoJsonGeometryCollection2 {
  type: string;
  geometries: Array<
    | GeoJsonPoint5
    | GeoJsonLineString5
    | GeoJsonPolygon5
    | GeoJsonMultiPoint5
    | GeoJsonMultiLineString5
    | GeoJsonMultiPolygon5>;
  bbox?: number[];
  [k: string]: any;
}
export interface GeoJsonPoint5 {
  type: "Point";
  coordinates: number[];
  bbox?: number[];
  [k: string]: any;
}
export interface GeoJsonLineString5 {
  type: "LineString";
  coordinates: number[][];
  bbox?: number[];
  [k: string]: any;
}
export interface GeoJsonPolygon5 {
  type: "Polygon";
  coordinates: number[][][];
  bbox?: number[];
  [k: string]: any;
}
export interface GeoJsonMultiPoint5 {
  type: "MultiPoint";
  coordinates: number[][];
  bbox?: number[];
  [k: string]: any;
}
export interface GeoJsonMultiLineString5 {
  type: "MultiLineString";
  coordinates: number[][][];
  bbox?: number[];
  [k: string]: any;
}
export interface GeoJsonMultiPolygon5 {
  type: "MultiPolygon";
  coordinates: number[][][][];
  bbox?: number[];
  [k: string]: any;
}
